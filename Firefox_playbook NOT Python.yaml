# code: language=ansible

---
- name: Get Latest and Install Firefox for Windows
  hosts: #windows_hosts
  gather_facts: no  

  tasks:
    - name: Check if Firefox is installed
      win_shell: |
        $firefoxVersion = (Get-ItemProperty "HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall\*" |
          Where-Object { $_.DisplayName -like "*Mozilla Firefox*" } |
          Select-Object -First 1).DisplayVersion
        Write-Output $firefoxVersion
      register: installed_version
      changed_when: false

    - block:
      - name: Fetch JSON data from Mozilla API
        uri:
          url: "https://product-details.mozilla.org/1.0/firefox_versions.json"
          return_content: yes
        register: json_data

      - name: Extract latest version for Windows, by the way set the latest version value
        set_fact:
          latest_version: "{{ json_data.json.LATEST_FIREFOX_VERSION }}"

      - name: Download the latest version of Mozilla Firefox
        win_shell: |
          $url = "https://download.mozilla.org/?product=firefox-latest&os=win64&lang=en-US"
          $dest = "C:\Temp\FirefoxSetup.exe"
          $wc = New-Object System.Net.WebClient
          $wc.DownloadFile($url, $dest)
        when: installed_version.stdout != latest_version

      - name: Update Mozilla Firefox
        win_shell: |
          Start-Process -Wait -FilePath "C:\Temp\FirefoxSetup.exe" -ArgumentList "/S"
        when: installed_version.stdout != latest_version

      - name: Validate the new installed Firefox version
        win_shell: |
          $firefoxVersion = (Get-ItemProperty "HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall\*" |
            Where-Object { $_.DisplayName -like "*Mozilla Firefox*" } |
            Select-Object -First 1).DisplayVersion
          Write-Output $firefoxVersion
        register: latest_installed_version
        changed_when: false

      - name: Set fact for the newly installed Firefox version
        set_fact:
          mstr_firefox_latest_version: "{{ latest_installed_version.stdout }}"
          cacheable: yes

    when: installed_version.stdout is defined and installed_version.stdout != ""